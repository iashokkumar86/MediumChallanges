class Solution(object):
    def pacificAtlantic(self, heights):
        """
        :type heights: List[List[int]]
        :rtype: List[List[int]]
        """
        
        if not heights:
            return []
        
        rows=len(heights)
        cols=len(heights[0])
        p_visited,a_visited=set(),set()
        def traverse(r , c , visited):
            if (r,c) not in visited:
                visited.add((r,c))
                
                for i,j in [(0,-1),(0,1),(-1,0),(1,0)]:
                    newx,newy=r+i,c+j
                    
                    if 0<=newx<rows and 0<=newy<cols and heights[newx][newy] >= heights[r][c]:
                        traverse(newx,newy,visited)
        
        for row in range(rows):
            traverse(row,0,p_visited)
            traverse(row,cols-1,a_visited)
        
        for col in range(cols):
            traverse(0,col,p_visited)
            traverse(rows-1,col,a_visited)
        return list(p_visited & a_visited)
